const mongoose = require('mongoose')
const validator = require('validator')

// To avoid confusion, a re: is a Post made by a user.
// But a re: can also refer to the references made within that post to other 
//stocks, re:s (posts), or portfolios.
// Which definition 're:' refers to will vary based on context.
const reSchema = mongoose.Schema({
  //author: author of the re, as id. None if the re was generated by the system.
  author: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User'
  },

  //text: text of the post, with re:x corresponding to the re with id x.
  text: {
    type: String,
    required: true,
    maxLength: 160
  },

  //res: an array of the references made within this post.
  res: [{
    //id: the unique id of this re (reference).
    id: {
      type: Number,
      required: true,
      unique: true
    },

    //type: the type of the reference, one of:
    // - "portfolio"
    // - "stock"
    // - "re" (another post)
    type: {
      type: String,
      required: true,
      validate: value => {
        return value === "portfolio" || value === "stock" || value === "re";
      }
    }
  }],

  //buys: the number of users who have bought this re:.
  buys: {
    type: Number,
    required: true
  }
})

const Re = mongoose.model('Re', reSchema)

module.exports = Re;